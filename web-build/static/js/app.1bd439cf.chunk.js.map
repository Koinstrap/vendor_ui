{"version":3,"sources":["contexts/ApiContexts.tsx","hooks/useCachedResources.ts","hooks/useScreenSize.tsx","screens/components/ModalContainer.tsx","screens/BuyScreen.tsx","screens/ContactScreen.tsx","screens/components/headers/FullColor.jsx","screens/components/headers/FullImage.jsx","screens/components/headers/HalfImage.jsx","screens/components/headers/SplitColor.jsx","hooks/renderSwitch.ts","assets/images/currencies/index.js","screens/components/currency-list/ListByTable.tsx","screens/components/currency-list/ListByCards.tsx","screens/components/navbars/SingleNav.tsx","screens/components/navbars/SplitNav.tsx","screens/HomeScreen.tsx","screens/OverviewScreen.tsx","screens/SearchScreen.tsx","screens/SellScreen.tsx","screens/index.tsx","App.tsx","hooks/useColorScheme.ts","node_modules/validatorjs/src/lang sync /^/.//.*$","assets/fonts/SpaceMono-Regular.ttf","assets/images/currencies/naira.png","assets/images/currencies/bitcoin.png","assets/images/currencies/bitcoincash.png","assets/images/currencies/litecoin.png","assets/images/currencies/ethereum.png","assets/images/currencies/usdt.png","assets/images/currencies/trx.png","assets/images/currencies/doge.png","assets/images/currencies/bnb.png","assets/images/currencies/xrp.png","assets/images/currencies/xlm.png"],"names":["addressValidator","require","MainApiContext","React","createContext","settings","currencies","currency","loadingCurrencies","loadingSettings","setCurrency","buyCrypto","status","sellCrypto","resolveAccount","searchOrder","order","loadingAccountResolve","loadingBuyRequest","loadingGetOrder","loadingSellRequest","fpPromise","FingerprintJS","load","client","createClient","requestInterceptors","action","a","async","fp","get","result","endpoint","headers","Accept","location","hostname","visitorId","responseInterceptors","getSettings","method","getCurrencies","postBuyRequest","body","postSellRequest","postResolveAccount","getOrder","ApiContext_","children","useState","setSettings","setCurrencies","setOrder","alert","useAlert","useQuery","loading","settingsPayload","payload","error","currenciesPayload","useMutation","sendBuyRequest","mutate","sendSellRequest","resolveAccountMutate","useParameterizedQuery","queryGetOrder","query","useEffect","name","length","message","window","Provider","value","amount","address","bank","accountNumber","isFiat","cryptoAmount","memoTag","phoneNumber","validate","display_name","validator","Validator","fails","errors","first","Object","keys","all","account_number","is_fiat","phone_number","buyRequestPayload","reference","accountResolvePayload","data","account_name","orderId","getOrderPayload","ApiContext","useCachedResources","useFonts","OpenSans_400Regular","OpenSans_600SemiBold","OpenSans_700Bold","fontsLoaded","isLoadingComplete","setLoadingComplete","SplashScreen","Font","Ionicons","font","console","warn","useScreenSize","useMediaQuery","maxDeviceWidth","ModalContainer","small","navigation","useNavigation","View","style","flex","TouchableOpacity","backgroundColor","onPress","goBack","styles","container","width","height","top","bottom","right","left","position","StyleSheet","create","BuyScreen","theme","useTheme","useContext","setIsFiat","setAmount","setCryptoAmount","setPhoneNumber","setAddress","setMemoTag","setBank","selectBankIndex","setSelectBankIndex","setAccountNumber","accountName","setAccountName","fiat_sell_price","onResolveAccount","banks","row","code","ScrollView","contentContainerStyle","paddingBottom","flexDirection","justifyContent","alignItems","paddingVertical","paddingHorizontal","category","activeOpacity","fill","marginBottom","borderRadius","size","appearance","replace","marginTop","borderWidth","borderColor","onChangeText","text","keyboardType","accessoryRight","accessoryLeft","placeholder","Number","toFixed","toLocaleString","marginRight","e","Clipboard","getStringAsync","clip","has_memo","has_destination_tag","onSelect","index","selectedIndex","map","title","key","editable","paddingTop","onClickProceedToPayment","ContactScreen","props","TouchableWithoutFeedback","FullColor","intro","tagline","minHeight","textAlign","allowFontScaling","FullImage","image","Image","source","uri","undefined","resizeMode","opacity","HalfImage","SplitColor","renderSwitches","current","options","NGN","BTC","BCH","LTC","ETH","USDT","TRX","DOGE","BNB","XRP","XLM","ListByTable","isSmallDevice","maxWidth","minWidth","marginHorizontal","padding","elevation","is_available","navigate","paddingRight","currencyLogos","price","buy_rate","sell_rate","change_percentage","CanPressOrNot","ListByCards","marginLeft","flexWrap","SingleNav","zIndex","logo","paddingLeft","SplitNav","HomeScreen","NavBar","navbar","HeroBanner","header","CurrencyList","list","Date","getFullYear","includes","WebBrowser","banner","user","link","textDecorationStyle","textDecorationLine","username","renderSwitch","urls","regular","OverviewScreen","time","type","bankName","setString","success","logoSize","logoBackgroundColor","Time","setTicker","interval","setInterval","now","clearInterval","sec_num","parseInt","differenceInSeconds","fromUnixTime","hours","Math","floor","minutes","seconds","SearchScreen","setOrderId","onPressSearch","SellScreen","marginVertical","Navigation","colorScheme","NavigationContainer","RootNavigator","Stack","createStackNavigator","url","Navigator","screenOptions","headerShown","cardStyle","cardOverlayEnabled","cardStyleInterpolator","progress","interpolate","inputRange","outputRange","overlayStyle","extrapolate","mode","Screen","component","timeout","positions","TOP_RIGHT","App","injectWebCss","_useColorScheme","template","AlertTemplate","icons","EvaIconsPack","AppWithLoading","colors","eva","customMapping","mapping","StatusBar","color","Platform","OS","document","createElement","textContent","head","append","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","resolve","module","exports"],"mappings":"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","file":"static/js/app.1bd439cf.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  createClient,\n  ClientContextProvider,\n  useQuery,\n  useMutation,\n  useParameterizedQuery,\n} from \"react-fetching-library\";\nimport FingerprintJS from \"@fingerprintjs/fingerprintjs\";\nimport { useAlert } from \"react-alert\";\nimport * as Validator from \"validatorjs\";\nconst addressValidator = require(\"@swyftx/api-crypto-address-validator\");\n\nconst contextInitial = {\n  settings: {},\n  currencies: [],\n  currency: null,\n  loadingCurrencies: true,\n  loadingSettings: true,\n  setCurrency: (currency) => {},\n  buyCrypto: () => {\n    return {\n      status: false,\n    };\n  },\n  sellCrypto: () => {\n    return {\n      status: false,\n    };\n  },\n  resolveAccount: () => {\n    return {\n      status: false,\n    };\n  },\n  searchOrder: () => {\n    return {\n      status: false,\n    };\n  },\n  order: null,\n  loadingAccountResolve: false,\n  loadingBuyRequest: false,\n  loadingGetOrder: false,\n  loadingSellRequest: false,\n};\n\nexport const MainApiContext = React.createContext(contextInitial);\nconst fpPromise = FingerprintJS.load();\n\nexport const requestHostInterceptor = () => (client) => async (action) => {\n  const fp = await fpPromise;\n  const result = await fp.get();\n  return {\n    ...action,\n    endpoint: `https://koinstrap.test/api/v${action.endpoint}`,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"Vendor-Host\": location.hostname,\n      \"Vendor-Visitor\": result.visitorId,\n    },\n  };\n};\n\nconst client = createClient({\n  requestInterceptors: [requestHostInterceptor()],\n  responseInterceptors: [],\n});\n\nconst getSettings = {\n  method: \"GET\",\n  endpoint: \"/settings\",\n};\n\nconst getCurrencies = {\n  method: \"GET\",\n  endpoint: \"/currencies\",\n};\n\nconst postBuyRequest = (body) => ({\n  method: \"POST\",\n  endpoint: \"/buy\",\n  body,\n});\n\nconst postSellRequest = (body) => ({\n  method: \"POST\",\n  endpoint: \"/sell\",\n  body,\n});\n\nconst postResolveAccount = (body) => ({\n  method: \"POST\",\n  endpoint: \"/resolve-account\",\n  body,\n});\n\nconst getOrder = (order) => ({\n  method: \"GET\",\n  endpoint: \"/orders/\" + order,\n});\n\nfunction ApiContext_({ children }) {\n  const [settings, setSettings] = useState({});\n  const [currencies, setCurrencies] = useState([]);\n  const [currency, setCurrency] = useState(null);\n  const [order, setOrder] = useState(null);\n\n  const alert = useAlert();\n\n  const {\n    loading: loadingSettings,\n    payload: settingsPayload,\n    error,\n  } = useQuery(getSettings, true);\n\n  const { loading: loadingCurrencies, payload: currenciesPayload } = useQuery(\n    getCurrencies,\n    true\n  );\n\n  const { loading: loadingBuyRequest, mutate: sendBuyRequest } =\n    useMutation(postBuyRequest);\n\n  const { loading: loadingSellRequest, mutate: sendSellRequest } =\n    useMutation(postSellRequest);\n\n  const { loading: loadingAccountResolve, mutate: resolveAccountMutate } =\n    useMutation(postResolveAccount);\n\n  const { loading: loadingGetOrder, query: queryGetOrder } =\n    useParameterizedQuery(getOrder);\n\n  useEffect(() => {\n    if (settingsPayload?.name) {\n      setSettings(settingsPayload);\n    }\n  }, [settingsPayload]);\n\n  useEffect(() => {\n    if (currenciesPayload?.length >= 1) {\n      setCurrencies(currenciesPayload);\n    }\n  }, [currenciesPayload]);\n\n  useEffect(() => {\n    if (error && settingsPayload?.message == \"vendor not found\") {\n      window.location = \"https://koinstrap.com/ks/app\";\n    }\n  }, [error]);\n\n  const buyCrypto = async ({\n    amount,\n    address,\n    bank,\n    accountNumber,\n    isFiat,\n    cryptoAmount,\n    memoTag,\n    phoneNumber,\n  }) => {\n    if (!addressValidator.validate(address, currency.currency)) {\n      return alert.error(\n        \"Please enter a valid \" + currency.display_name + \" address\"\n      );\n    }\n\n    const validator = new Validator(\n      {\n        amount,\n        address,\n        bank,\n        accountNumber,\n        isFiat,\n        memoTag,\n        phoneNumber,\n      },\n      {\n        amount: \"required|numeric|min:1000\",\n        address: \"required|alpha_num\",\n        bank: \"required\",\n        accountNumber: \"required|min:10|max:10\",\n        phoneNumber: \"required|min:11|max:11\",\n        memoTag: \"min:3|max:25\",\n      },\n      {\n        \"required.amount\": \"Kindly enter a valid amount\",\n        \"min.amount\": \"Kindly enter an amount above NGN 1000\",\n        \"required.address\": \"Kindly enter a valid address\",\n        \"alpha_num.address\": \"Kindly enter a valid address\",\n        \"required.bank\": \"Kindly select a valid bank\",\n        \"required.accountNumber\": \"Kindly enter a valid account number\",\n        \"min.accountNumber\": \"Account account number must be 10 numbers\",\n        \"max.accountNumber\": \"Account account number must be 10 numbers\",\n        \"required.phoneNumber\": \"Please enter a valid phone number\",\n        \"min.phoneNumber\": \"Phone number must be 11 numbers\",\n        \"max.phoneNumber\": \"Phone number must be 11 numbers\",\n      }\n    );\n\n    if (validator.fails()) {\n      alert.error(\n        validator.errors.first(Object.keys(validator.errors.all())[0])\n      );\n      return {\n        status: false,\n      };\n    }\n    const { payload: buyRequestPayload } = await sendBuyRequest({\n      amount: cryptoAmount,\n      address,\n      bank,\n      account_number: accountNumber,\n      is_fiat: isFiat,\n      currency: currency.currency,\n      memoTag,\n      phone_number: phoneNumber,\n    });\n\n    if (buyRequestPayload?.reference) {\n      setOrder(buyRequestPayload);\n      return {\n        status: true,\n      };\n    }\n\n    if (buyRequestPayload.errors) {\n      alert.error(\n        buyRequestPayload.errors[Object.keys(buyRequestPayload.errors)[0]][0]\n      );\n    }\n\n    if (buyRequestPayload.message == \"Vendor cannont receive payments\") {\n      alert.error(\"Can't receive payments, kindly contact support.\");\n    }\n\n    return {\n      status: false,\n    };\n  };\n\n  const sellCrypto = async ({\n    amount,\n    bank,\n    accountNumber,\n    isFiat,\n    cryptoAmount,\n    phoneNumber,\n  }) => {\n    const validator = new Validator(\n      {\n        amount,\n        bank,\n        accountNumber,\n        isFiat,\n        phoneNumber,\n      },\n      {\n        amount: \"required|numeric|min:1000\",\n        bank: \"required\",\n        accountNumber: \"required|min:10|max:10\",\n        phoneNumber: \"min:11|max:11\",\n      },\n      {\n        \"required.amount\": \"Please enter a valid amount\",\n        \"min.amount\": \"Please enter an amount above NGN 1000\",\n        \"required.bank\": \"Please select a valid bank\",\n        \"required.accountNumber\": \"Please enter a valid account number\",\n        \"min.accountNumber\": \"Account account number must be 10 numbers\",\n        \"max.accountNumber\": \"Account account number must be 10 numbers\",\n        \"required.phoneNumber\": \"Please enter a valid phone number\",\n        \"min.phoneNumber\": \"Phone number must be 11 numbers\",\n        \"max.phoneNumber\": \"Phone number must be 11 numbers\",\n      }\n    );\n\n    if (validator.fails()) {\n      alert.error(\n        validator.errors.first(Object.keys(validator.errors.all())[0])\n      );\n      return {\n        status: false,\n      };\n    }\n    const { payload: buyRequestPayload } = await sendSellRequest({\n      amount: cryptoAmount,\n      bank,\n      account_number: accountNumber,\n      is_fiat: isFiat,\n      currency: currency.currency,\n      phone_number: phoneNumber,\n    });\n\n    if (buyRequestPayload?.reference) {\n      setOrder(buyRequestPayload);\n      return {\n        status: true,\n      };\n    }\n\n    if (buyRequestPayload.errors) {\n      alert.error(\n        buyRequestPayload.errors[Object.keys(buyRequestPayload.errors)[0]][0]\n      );\n    }\n\n    return {\n      status: false,\n    };\n  };\n\n  const resolveAccount = async ({ bank, accountNumber }) => {\n    const { payload: accountResolvePayload } = await resolveAccountMutate({\n      bank,\n      account_number: accountNumber,\n    });\n\n    if (!accountResolvePayload) {\n      return {\n        name: \"\",\n        status: false,\n      };\n    }\n\n    if (!accountResolvePayload[\"status\"]) {\n      return {\n        name: \"\",\n        status: false,\n      };\n    }\n\n    return {\n      name: accountResolvePayload.data.account_name,\n      status: true,\n    };\n  };\n\n  const searchOrder = async (orderId) => {\n    const { payload: getOrderPayload } = await queryGetOrder(orderId);\n\n    if (!getOrderPayload) {\n      // Get Order payload\n      return {\n        status: false,\n      };\n    }\n\n    if (!getOrderPayload[\"reference\"]) {\n      // Get Order payload\n      return {\n        status: false,\n      };\n    }\n\n    if (getOrderPayload?.reference) {\n      setOrder(getOrderPayload);\n      return {\n        status: true,\n      };\n    }\n\n    return {\n      status: true,\n    };\n  };\n\n  return (\n    <MainApiContext.Provider\n      value={{\n        settings,\n        currencies,\n        currency,\n        setCurrency,\n        loadingSettings,\n        loadingCurrencies,\n        buyCrypto,\n        sellCrypto,\n        resolveAccount,\n        searchOrder,\n        loadingAccountResolve,\n        order,\n        loadingBuyRequest,\n        loadingSellRequest,\n        loadingGetOrder,\n      }}\n    >\n      {children}\n    </MainApiContext.Provider>\n  );\n}\n\nexport default function ApiContext({ children }) {\n  return (\n    <ClientContextProvider client={client}>\n      <ApiContext_>{children}</ApiContext_>\n    </ClientContextProvider>\n  );\n}\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport * as React from \"react\";\nimport { MainApiContext } from \"../contexts/ApiContexts\";\n\nimport {\n  useFonts,\n  OpenSans_400Regular,\n  OpenSans_600SemiBold,\n  OpenSans_700Bold,\n} from \"@expo-google-fonts/open-sans\";\n\nexport default function useCachedResources() {\n  let [fontsLoaded] = useFonts({\n    OpenSans_400Regular,\n    OpenSans_600SemiBold,\n    OpenSans_700Bold,\n  });\n\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const { loadingCurrencies, loadingSettings, settings } =\n    React.useContext(MainApiContext);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          \"space-mono\": require(\"../assets/fonts/SpaceMono-Regular.ttf\"),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return (\n    isLoadingComplete && !loadingCurrencies && !loadingSettings && fontsLoaded\n  );\n}\n","import \"@expo/match-media\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nexport default function useScreenSize() {\n  const isTabletOrMobileDevice = useMediaQuery({\n    maxDeviceWidth: 992,\n  });\n  return isTabletOrMobileDevice;\n}\n","import { useNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport useScreenSize from \"../../hooks/useScreenSize\";\n\nexport default function ModalContainer({ children }) {\n  const small = useScreenSize();\n  const navigation = useNavigation();\n  return (\n    <View style={{ flex: 1 }}>\n      <TouchableOpacity\n        style={{\n          flex: 1,\n          backgroundColor: \"transparent\",\n        }}\n        onPress={() => navigation.goBack()}\n      />\n      <View\n        style={[\n          styles.container,\n          small && {\n            width: \"100%\",\n            height: \"100%\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            position: \"absolute\",\n            backgroundColor: \"#fff\",\n          },\n        ]}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    width: 600,\n    top: 0,\n    bottom: 0,\n    right: 0,\n    position: \"absolute\",\n    backgroundColor: \"#fff\",\n  },\n});\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  TouchableOpacity,\n  View,\n  TextInput,\n  ScrollView,\n  Alert,\n} from \"react-native\";\nimport {\n  Text,\n  Icon,\n  useTheme,\n  Button,\n  Divider,\n  Select,\n  SelectItem,\n  Input,\n  Spinner,\n} from \"@ui-kitten/components\";\nimport Clipboard from \"expo-clipboard\";\n\nimport ModalContainer from \"./components/ModalContainer\";\nimport useScreenSize from \"../hooks/useScreenSize\";\nimport { useAlert } from \"react-alert\";\nimport { MainApiContext } from \"../contexts/ApiContexts\";\n\nexport default function BuyScreen({ navigation }) {\n  const theme = useTheme();\n  const small = useScreenSize();\n\n  const alert = useAlert();\n  const {\n    currency,\n    buyCrypto,\n    settings,\n    resolveAccount,\n    loadingAccountResolve,\n    loadingBuyRequest,\n  } = useContext(MainApiContext);\n\n  const [isFiat, setIsFiat] = useState(true);\n  const [amount, setAmount] = useState(\"0.00\");\n  const [cryptoAmount, setCryptoAmount] = useState(\"0.00\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [memoTag, setMemoTag] = useState(\"\");\n  const [bank, setBank] = useState(\"\");\n  const [selectBankIndex, setSelectBankIndex] = useState();\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [accountName, setAccountName] = useState(\"\");\n\n  useEffect(() => {\n    if (isFiat) {\n      setCryptoAmount(amount / currency.fiat_sell_price);\n    }\n    if (!isFiat) {\n      setAmount(cryptoAmount * currency.fiat_sell_price);\n    }\n  }, [isFiat, amount, cryptoAmount]);\n\n  const onClickProceedToPayment = async () => {\n    if (!accountName) {\n      return alert.error(\"Please enter valid account details\");\n    }\n    const { status } = await buyCrypto({\n      amount,\n      address,\n      bank,\n      accountNumber,\n      isFiat,\n      cryptoAmount,\n      memoTag,\n      phoneNumber,\n    });\n\n    if (status) {\n      navigation.replace(\"Overview\");\n    }\n  };\n\n  const onResolveAccount = async () => {\n    const { name, status } = await resolveAccount({\n      bank,\n      accountNumber,\n    });\n\n    if (status) {\n      setAccountName(name);\n    }\n  };\n\n  useEffect(() => {\n    if (accountNumber.length >= 10) {\n      onResolveAccount();\n    } else {\n      setAccountName(\"\");\n    }\n  }, [bank, accountNumber]);\n\n  useEffect(() => {\n    setAccountName(\"\");\n  }, [bank]);\n\n  useEffect(() => {\n    if (selectBankIndex) {\n      setBank(settings.banks[selectBankIndex.row].code);\n    }\n  }, [selectBankIndex]);\n\n  return (\n    <ModalContainer>\n      <ScrollView\n        style={{ flex: 1 }}\n        contentContainerStyle={{ paddingBottom: 50 }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingVertical: 15,\n            paddingHorizontal: 15,\n          }}\n        >\n          <Text category=\"h6\">What do you want to do?</Text>\n\n          {!loadingBuyRequest && (\n            <TouchableOpacity\n              activeOpacity={0.8}\n              onPress={() => navigation.goBack()}\n            >\n              <Icon\n                name=\"close-circle-outline\"\n                height={30}\n                width={30}\n                fill={theme[\"color-basic-700\"]}\n              />\n            </TouchableOpacity>\n          )}\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            paddingHorizontal: 15,\n            marginBottom: 20,\n          }}\n        >\n          <View style={{ width: small ? 125 : 175 }}>\n            <Button\n              style={{ borderRadius: 400 }}\n              size={small ? \"medium\" : \"giant\"}\n            >\n              BUY {currency.currency}\n            </Button>\n          </View>\n          <View style={{ width: 25 }} />\n          <View style={{ width: small ? 125 : 175 }}>\n            <Button\n              style={{ backgroundColor: \"transparent\", borderRadius: 400 }}\n              size={small ? \"medium\" : \"giant\"}\n              appearance=\"outline\"\n              onPress={() => navigation.replace(\"Sell\")}\n            >\n              SELL {currency.currency}\n            </Button>\n          </View>\n        </View>\n\n        <Divider />\n\n        <View style={{ paddingHorizontal: 15, marginTop: 20 }}>\n          <View style={{ marginBottom: 5 }}>\n            <Text category=\"s1\">How much do you want to buy?</Text>\n          </View>\n\n          <View>\n            <Input\n              style={{\n                borderWidth: 1,\n                borderColor: theme[\"color-primary-600\"],\n                borderRadius: 5,\n              }}\n              value={isFiat ? amount : cryptoAmount}\n              onChangeText={(text) => {\n                if (isFiat) {\n                  setAmount(text);\n                }\n\n                if (!isFiat) {\n                  setCryptoAmount(text);\n                }\n              }}\n              keyboardType=\"decimal-pad\"\n              accessoryRight={() => {\n                if (isFiat) {\n                  return <></>;\n                }\n                return (\n                  <Text status=\"primary\" category=\"label\">\n                    {currency.currency}\n                  </Text>\n                );\n              }}\n              accessoryLeft={() => {\n                if (!isFiat) {\n                  return <></>;\n                }\n                return (\n                  <Text status=\"primary\" category=\"label\">\n                    NGN\n                  </Text>\n                );\n              }}\n              size=\"large\"\n              placeholder=\"Enter amount\"\n            />\n          </View>\n\n          <View\n            style={{\n              marginTop: 5,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text category=\"s2\">\n              Approximately{\" \"}\n              {isFiat\n                ? `${Number(cryptoAmount).toFixed(8)} ${currency.currency}`\n                : `NGN ${amount.toLocaleString()}`}\n            </Text>\n            <TouchableOpacity onPress={() => setIsFiat(!isFiat)}>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <View style={{ marginRight: 2 }}>\n                  <Text category=\"label\" status=\"danger\">\n                    {isFiat ? \"By Crypto\" : \"By Cash\"}\n                  </Text>\n                </View>\n                <Icon\n                  name=\"swap-outline\"\n                  width={15}\n                  height={15}\n                  fill={theme[\"color-danger-600\"]}\n                />\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <View\n          style={{ paddingHorizontal: 15, marginTop: 20, marginBottom: 35 }}\n        >\n          <View style={{ marginBottom: 5 }}>\n            <Text category=\"s1\">Receiving Address</Text>\n          </View>\n\n          <View>\n            <Input\n              value={address}\n              onChangeText={(e) => setAddress(e)}\n              style={{\n                borderWidth: 1,\n                borderColor: theme[\"color-primary-600\"],\n                borderRadius: 5,\n              }}\n              accessoryRight={() => {\n                return (\n                  <Button\n                    size=\"tiny\"\n                    onPress={async () => {\n                      try {\n                        const clip = await Clipboard.getStringAsync();\n                        setAddress(clip);\n                      } catch (error) {\n                        alert.error(\"Could not read clipboard\");\n                      }\n                    }}\n                  >\n                    Paste\n                  </Button>\n                );\n              }}\n              size=\"large\"\n              placeholder=\"Enter receiving address\"\n            />\n          </View>\n\n          {currency?.has_memo || currency.has_destination_tag ? (\n            <>\n              <View style={{ marginBottom: 5, marginTop: 15 }}>\n                <Text category=\"s1\">Receiving Address Memo/Tag</Text>\n              </View>\n\n              <View>\n                <Input\n                  value={memoTag}\n                  onChangeText={(e) => setMemoTag(e)}\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  accessoryRight={() => {\n                    return (\n                      <Button\n                        size=\"tiny\"\n                        onPress={async () => {\n                          try {\n                            const clip = await Clipboard.getStringAsync();\n                            setMemoTag(clip);\n                          } catch (error) {\n                            alert.error(\"Could not read clipboard\");\n                          }\n                        }}\n                      >\n                        Paste\n                      </Button>\n                    );\n                  }}\n                  size=\"large\"\n                  placeholder=\"Enter receiving address memo/tag\"\n                />\n              </View>\n            </>\n          ) : (\n            <></>\n          )}\n        </View>\n\n        <Divider />\n\n        <View style={{ paddingHorizontal: 15, paddingVertical: 25 }}>\n          <Text category=\"s1\">Sending Account Details</Text>\n\n          <View style={{ height: 5 }} />\n\n          <Text category=\"p2\">\n            Kindly provide the account you'd be paying with. Please note that\n            the payment must be done using the account provided below only.\n            Payment from another account would not be regarded as payment for\n            this transaction.\n          </Text>\n        </View>\n\n        <View style={{ paddingHorizontal: 15 }}>\n          <View style={{ marginTop: 10, marginBottom: 15 }}>\n            <View style={{ marginBottom: 5 }}>\n              <Text category=\"s1\">Phone Number</Text>\n            </View>\n\n            <View>\n              <Input\n                value={phoneNumber}\n                onChangeText={(e) => setPhoneNumber(e)}\n                style={{\n                  borderWidth: 1,\n                  borderColor: theme[\"color-primary-600\"],\n                  borderRadius: 5,\n                }}\n                size=\"large\"\n                placeholder=\"Enter phone number\"\n              />\n            </View>\n          </View>\n\n          {small ? (\n            <>\n              <View style={{ flex: 1, paddingVertical: 15 }}>\n                <View style={{ marginBottom: 5 }}>\n                  <Text category=\"s1\">Select Bank</Text>\n                </View>\n\n                <Select\n                  size=\"large\"\n                  placeholder=\"Select a Bank\"\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  value={(settings?.banks ?? [])[selectBankIndex - 1]?.name}\n                  onSelect={(index) => setSelectBankIndex(index)}\n                  selectedIndex={selectBankIndex}\n                >\n                  {settings.banks.map((bank) => (\n                    <SelectItem title={bank.name} key={bank.name} />\n                  ))}\n                </Select>\n              </View>\n              <View style={{ flex: 1, paddingVertical: 15 }}>\n                <View style={{ marginBottom: 5 }}>\n                  <Text category=\"s1\">Account Number</Text>\n                </View>\n\n                <Input\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  size=\"large\"\n                  value={accountNumber}\n                  placeholder=\"Enter account number\"\n                  onChangeText={(e) => setAccountNumber(e)}\n                  accessoryRight={() => {\n                    if (!loadingAccountResolve) {\n                      return <></>;\n                    }\n                    return <Spinner size=\"tiny\" status=\"success\" />;\n                  }}\n                />\n              </View>\n            </>\n          ) : (\n            <View style={{ flexDirection: \"row\" }}>\n              <View style={{ flex: 1 }}>\n                <View style={{ marginBottom: 5 }}>\n                  <Text category=\"s1\">Select Bank</Text>\n                </View>\n\n                <Select\n                  size=\"large\"\n                  placeholder=\"Select a Bank\"\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  value={(settings?.banks ?? [])[selectBankIndex - 1]?.name}\n                  onSelect={(index) => setSelectBankIndex(index)}\n                  selectedIndex={selectBankIndex}\n                >\n                  {settings.banks.map((bank) => (\n                    <SelectItem title={bank.name} key={bank.name} />\n                  ))}\n                </Select>\n              </View>\n\n              <View style={{ width: 10 }} />\n\n              <View style={{ width: 240 }}>\n                <View style={{ marginBottom: 5 }}>\n                  <Text category=\"s1\">Account Number</Text>\n                </View>\n\n                <Input\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  size=\"large\"\n                  value={accountNumber}\n                  placeholder=\"Enter account number\"\n                  onChangeText={(e) => setAccountNumber(e)}\n                  accessoryRight={() => {\n                    if (!loadingAccountResolve) {\n                      return <></>;\n                    }\n                    return <Spinner size=\"tiny\" status=\"success\" />;\n                  }}\n                />\n              </View>\n            </View>\n          )}\n\n          <View style={{ flex: 1, paddingVertical: 15 }}>\n            <View style={{ marginBottom: 5 }}>\n              <Text category=\"s1\">Account Name</Text>\n            </View>\n\n            <Input\n              style={{\n                borderWidth: 1,\n                borderColor: theme[\"color-primary-600\"],\n                borderRadius: 5,\n              }}\n              size=\"large\"\n              value={accountName}\n              placeholder=\"Enter full account name\"\n              editable={false}\n            />\n          </View>\n\n          <View style={{ paddingTop: 15 }}>\n            <Button\n              size=\"giant\"\n              onPress={() => {\n                if (loadingBuyRequest) {\n                  return;\n                }\n                onClickProceedToPayment();\n              }}\n              accessoryLeft={() => {\n                if (!loadingBuyRequest) {\n                  return <></>;\n                }\n\n                return <Spinner size=\"small\" status=\"control\" />;\n              }}\n            >\n              {loadingBuyRequest ? \"Processing\" : \"Proceed to Payment\"}\n            </Button>\n          </View>\n        </View>\n      </ScrollView>\n    </ModalContainer>\n  );\n}\n","import * as React from \"react\";\nimport { TouchableOpacity, View, TouchableWithoutFeedback } from \"react-native\";\nimport { Text, Icon, useTheme, Input, Button } from \"@ui-kitten/components\";\n\nimport ModalContainer from \"./components/ModalContainer\";\n\nexport default function ContactScreen({ navigation }) {\n  const theme = useTheme();\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback>\n      <Icon {...props} name=\"search-outline\" />\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <ModalContainer>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingVertical: 15,\n          paddingHorizontal: 15,\n        }}\n      >\n        <View>\n          <Text category=\"h5\">Search</Text>\n          <View style={{ height: 5 }} />\n          <Text category=\"s1\" appearance=\"hint\">\n            Kindly search with transaction reference\n          </Text>\n        </View>\n\n        <TouchableOpacity>\n          <Icon\n            name=\"close-circle-outline\"\n            height={30}\n            width={30}\n            fill={theme[\"color-basic-700\"]}\n          />\n        </TouchableOpacity>\n      </View>\n\n      <View style={{ paddingHorizontal: 15, paddingTop: 35 }}>\n        <Input\n          placeholder=\"Search reference\"\n          size=\"large\"\n          accessoryRight={renderIcon}\n        />\n        <View style={{ paddingTop: 15 }}>\n          <Button size=\"large\">Search</Button>\n        </View>\n      </View>\n    </ModalContainer>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"@ui-kitten/components\";\nimport { View, Image } from \"react-native\";\n\nexport default function FullColor({ theme, intro, tagline }) {\n  return (\n    <View\n      style={{\n        minHeight: 500,\n        backgroundColor: theme[\"color-primary-700\"],\n        alignItems: \"center\",\n      }}\n    >\n      <View style={{ flex: 1, alignItems: \"center\", paddingTop: 200 }}>\n        <View style={{ paddingHorizontal: 25 }}>\n          <Text\n            category=\"h3\"\n            appearance=\"alternative\"\n            style={{ textAlign: \"center\" }}\n          >\n            {intro}\n          </Text>\n\n          <View style={{ paddingTop: 10 }} />\n\n          <Text\n            category=\"s1\"\n            allowFontScaling={false}\n            appearance=\"alternative\"\n            style={{ textAlign: \"center\" }}\n          >\n            {tagline}\n          </Text>\n        </View>\n      </View>\n\n      <View style={{ marginBottom: 35 }}>\n        <Text appearance=\"alternative\" category=\"h5\" style={{}}>\n          Start Trading\n        </Text>\n      </View>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"@ui-kitten/components\";\nimport { View, Image } from \"react-native\";\n\nexport default function FullImage({ theme, intro, tagline, image }) {\n  return (\n    <View\n      style={{\n        minHeight: 500,\n      }}\n    >\n      <View\n        style={{ position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0 }}\n      >\n        <View style={{ height: \"100%\", width: \"100%\" }}>\n          <Image\n            source={{ uri: image }}\n            style={{\n              flex: 1,\n              height: undefined,\n              width: undefined,\n            }}\n            resizeMode=\"cover\"\n          />\n        </View>\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: theme[\"color-primary-600\"],\n            opacity: 0.4,\n          }}\n        />\n      </View>\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        <View style={{ flex: 1, alignItems: \"center\", paddingTop: 200 }}>\n          <View style={{ paddingHorizontal: 25 }}>\n            <Text\n              category=\"h3\"\n              appearance=\"alternative\"\n              style={{ textAlign: \"center\" }}\n            >\n              {intro}\n            </Text>\n\n            <View style={{ paddingTop: 10 }} />\n\n            <Text\n              category=\"s1\"\n              allowFontScaling={false}\n              appearance=\"alternative\"\n              style={{ textAlign: \"center\" }}\n            >\n              {tagline}\n            </Text>\n          </View>\n        </View>\n\n        <View style={{ marginBottom: 35 }}>\n          <Text appearance=\"alternative\" category=\"h5\" style={{}}>\n            Start Trading\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"@ui-kitten/components\";\nimport { View, Image } from \"react-native\";\n\nexport default function HalfImage({ theme, intro, tagline, image }) {\n  return (\n    <View\n      style={{\n        minHeight: 600,\n        flexDirection: \"row\",\n        width: \"100%\",\n      }}\n    >\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          backgroundColor: theme[\"color-primary-600\"],\n        }}\n      />\n\n      <View style={{ flex: 1 }}>\n        <View style={{ height: \"100%\", width: \"100%\" }}>\n          <Image\n            source={{ uri: image }}\n            style={{\n              flex: 1,\n              height: undefined,\n              width: undefined,\n            }}\n            resizeMode=\"cover\"\n          />\n        </View>\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: theme[\"color-primary-600\"],\n            opacity: 0.4,\n          }}\n        />\n      </View>\n\n      <View\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          minHeight: 600,\n          alignItems: \"center\",\n        }}\n      >\n        <View style={{ flex: 1, alignItems: \"center\", paddingTop: 200 }}>\n          <View style={{ paddingHorizontal: 25 }}>\n            <Text\n              category=\"h1\"\n              appearance=\"alternative\"\n              style={{ textAlign: \"center\" }}\n            >\n              {intro}\n            </Text>\n\n            <View style={{ paddingTop: 10 }} />\n\n            <Text\n              category=\"s1\"\n              allowFontScaling={false}\n              appearance=\"alternative\"\n              style={{ textAlign: \"center\" }}\n            >\n              {tagline}\n            </Text>\n          </View>\n        </View>\n\n        <View style={{ marginBottom: 35 }}>\n          <Text appearance=\"alternative\" category=\"h5\" style={{}}>\n            Start Trading\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"@ui-kitten/components\";\nimport { View, Image } from \"react-native\";\n\nexport default function SplitColor({ theme, intro, tagline }) {\n  return (\n    <View\n      style={{\n        minHeight: 600,\n        flexDirection: \"row\",\n        width: \"100%\",\n      }}\n    >\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          backgroundColor: theme[\"color-primary-400\"],\n        }}\n      />\n\n      <View style={{ flex: 1, backgroundColor: theme[\"color-primary-600\"] }} />\n\n      <View\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          minHeight: 600,\n          alignItems: \"center\",\n        }}\n      >\n        <View style={{ flex: 1, alignItems: \"center\", paddingTop: 200 }}>\n          <View style={{ paddingHorizontal: 25 }}>\n            <Text\n              category=\"h1\"\n              appearance=\"alternative\"\n              style={{ textAlign: \"center\" }}\n            >\n              {intro}\n            </Text>\n\n            <View style={{ paddingTop: 10 }} />\n\n            <Text\n              category=\"s1\"\n              allowFontScaling={false}\n              appearance=\"alternative\"\n              style={{ textAlign: \"center\" }}\n            >\n              {tagline}\n            </Text>\n          </View>\n        </View>\n\n        <View style={{ marginBottom: 35 }}>\n          <Text appearance=\"alternative\" category=\"h5\" style={{}}>\n            Start Trading\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n","const renderSwitches = (current = \"\", options = {}) => {\n  return options[current];\n};\n\nexport default renderSwitches;\n","export default {\n  NGN: require(\"./naira.png\"),\n  BTC: require(\"./bitcoin.png\"),\n  BCH: require(\"./bitcoincash.png\"),\n  LTC: require(\"./litecoin.png\"),\n  ETH: require(\"./ethereum.png\"),\n  USDT: require(\"./usdt.png\"),\n  TRX: require(\"./trx.png\"),\n  DOGE: require(\"./doge.png\"),\n  BNB: require(\"./bnb.png\"),\n  XRP: require(\"./xrp.png\"),\n  XLM: require(\"./xlm.png\"),\n};\n","import React, { useContext } from \"react\";\nimport { Button, Text } from \"@ui-kitten/components\";\nimport { View, TouchableOpacity, Image } from \"react-native\";\nimport useScreenSize from \"../../../hooks/useScreenSize\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { MainApiContext } from \"../../../contexts/ApiContexts\";\nimport { useAlert } from \"react-alert\";\n\nimport currencyLogos from \"../../../assets/images/currencies\";\n\nexport default function ListByTable({ theme }) {\n  const isSmallDevice = useScreenSize();\n  const navigation = useNavigation();\n\n  const alert = useAlert();\n\n  const { currencies = [], setCurrency, settings } = useContext(MainApiContext);\n\n  return (\n    <View style={[!isSmallDevice && { alignItems: \"center\" }]}>\n      <View\n        style={[\n          {\n            marginTop: 25,\n            paddingBottom: 0,\n            marginBottom: 20,\n            // box-shadow: 0 29px 21px -34px rgb(23 49 84 / 82%)\n            //   alignSelf: \"center\",\n          },\n          !isSmallDevice && {\n            maxWidth: 1200,\n            minWidth: 900,\n            borderWidth: 1,\n            borderColor: \"#ccc\",\n            marginHorizontal: 10,\n            padding: 15,\n            borderRadius: 10,\n            elevation: 5,\n          },\n          isSmallDevice && {\n            padding: 10,\n          },\n        ]}\n      >\n        {currencies.map((currency, index) => (\n          <CanPressOrNot\n            isSmallDevice={isSmallDevice}\n            onPress={() => {\n              if (!settings.is_available) {\n                alert.error(\n                  \"Trading is temporarily disabled, Kindly try again later.\"\n                );\n                return;\n              }\n              setCurrency(currency);\n              navigation.navigate(\"Buy\", { currency: currency.currency });\n            }}\n            key={currency.currency}\n          >\n            <View\n              key={currency.currency}\n              style={[\n                {\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                },\n              ]}\n            >\n              <View style={{ paddingRight: 10 }}>\n                <View style={{ height: 30, width: 30 }}>\n                  <Image\n                    source={currencyLogos[currency.currency]}\n                    style={{ height: undefined, width: undefined, flex: 1 }}\n                  />\n                </View>\n              </View>\n\n              <View\n                style={[\n                  { flex: 1, paddingRight: 10 },\n                  isSmallDevice && {\n                    justifyContent: \"space-around\",\n                  },\n                ]}\n              >\n                <Text category=\"s1\">{currency.display_name}</Text>\n                <View style={{ paddingTop: 5 }} />\n                <Text appearance=\"hint\" category=\"c1\">\n                  {currency.currency}\n                </Text>\n                {isSmallDevice && (\n                  <Text>\n                    NGN {(currency.price * currency.buy_rate).toLocaleString()}\n                  </Text>\n                )}\n              </View>\n\n              <View\n                style={[\n                  { flex: 1, paddingRight: 10 },\n                  isSmallDevice && {\n                    justifyContent: \"space-around\",\n                    paddingRight: 0,\n                    flex: undefined,\n                  },\n                ]}\n              >\n                <Text>Buy: {currency.buy_rate}/NGN</Text>\n                <View style={{ paddingTop: 5 }} />\n                <Text>Sell: {currency.sell_rate}/NGN</Text>\n              </View>\n              {!isSmallDevice && (\n                <>\n                  <View style={{ flex: 1, paddingRight: 10 }}>\n                    <Text>\n                      NGN{\" \"}\n                      {(currency.price * currency.buy_rate).toLocaleString()}\n                    </Text>\n                  </View>\n\n                  <View style={{ flex: 1, paddingRight: 10 }}>\n                    <Text\n                      status={\n                        currency.change_percentage >= 0 ? \"success\" : \"danger\"\n                      }\n                    >\n                      {currency.change_percentage} %\n                    </Text>\n                  </View>\n                </>\n              )}\n\n              {!isSmallDevice && (\n                <View style={{}}>\n                  <Button\n                    size=\"small\"\n                    onPress={() => {\n                      if (!settings.is_available) {\n                        alert.error(\n                          \"Trading is temporarily disabled, Kindly try again later.\"\n                        );\n                        return;\n                      }\n                      setCurrency(currency);\n                      navigation.navigate(\"Buy\", {\n                        currency: currency.currency,\n                      });\n                    }}\n                  >\n                    Trade\n                  </Button>\n                </View>\n              )}\n            </View>\n          </CanPressOrNot>\n        ))}\n      </View>\n    </View>\n  );\n}\n\nconst CanPressOrNot = ({ onPress, children, isSmallDevice }) => {\n  if (isSmallDevice) {\n    return (\n      <TouchableOpacity activeOpacity={0.8} onPress={onPress}>\n        {children}\n      </TouchableOpacity>\n    );\n  }\n  return <>{children}</>;\n};\n","import React, { useContext } from \"react\";\nimport { Button, Text, Divider } from \"@ui-kitten/components\";\nimport { View, Image } from \"react-native\";\nimport useScreenSize from \"../../../hooks/useScreenSize\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { MainApiContext } from \"../../../contexts/ApiContexts\";\n\nimport currencyLogos from \"../../../assets/images/currencies\";\nimport { useAlert } from \"react-alert\";\n\nexport default function ListByCards({ theme }) {\n  const isSmallDevice = useScreenSize();\n  const navigation = useNavigation();\n\n  const alert = useAlert();\n\n  const { currencies = [], setCurrency, settings } = useContext(MainApiContext);\n\n  return (\n    <View\n      style={{\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        maxWidth: 900,\n        marginTop: 20,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {currencies.map((currency, index) => (\n          <View\n            key={currency.currency}\n            style={{\n              width: isSmallDevice ? \"100%\" : \"49%\",\n              paddingVertical: 15,\n              paddingHorizontal: 10,\n            }}\n          >\n            <View\n              style={{\n                backgroundColor: theme[\"color-basic-100\"],\n                borderWidth: 1,\n                minHeight: 100,\n                borderRadius: 10,\n                paddingVertical: 15,\n                borderColor: theme[\"outline-color\"],\n                elevation: 5,\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  paddingHorizontal: 15,\n                  paddingBottom: 15,\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                }}\n              >\n                <View style={{ paddingRight: 20 }}>\n                  <View style={{ height: 40, width: 40 }}>\n                    <Image\n                      source={currencyLogos[currency.currency]}\n                      style={{ height: undefined, width: undefined, flex: 1 }}\n                    />\n                  </View>\n                </View>\n\n                <View style={{ width: \"100%\" }}>\n                  <Text>\n                    {currency.display_name} ({currency.currency}){\" \"}\n                  </Text>\n\n                  <View style={{}}>\n                    <Text>\n                      NGN{\" \"}\n                      {(currency.price * currency.buy_rate).toLocaleString()}{\" \"}\n                    </Text>\n                    <Text\n                      status={\n                        currency.change_percentage >= 0 ? \"success\" : \"danger\"\n                      }\n                    >\n                      {currency.change_percentage} %\n                    </Text>\n                  </View>\n                </View>\n              </View>\n\n              <Divider />\n\n              <View style={{ flexDirection: \"row\" }}>\n                <View\n                  style={{\n                    flex: 1,\n                    paddingVertical: 15,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Text>Buy Rate</Text>\n                  <Text>{currency.buy_rate}/NGN</Text>\n                </View>\n                <View\n                  style={{\n                    width: 1,\n                    backgroundColor: theme[\"outline-color\"],\n                    height: \"100%\",\n                  }}\n                />\n                <View\n                  style={{\n                    flex: 1,\n                    paddingVertical: 15,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Text>Sell Rate</Text>\n                  <Text>{currency.sell_rate}/NGN</Text>\n                </View>\n              </View>\n\n              <Divider />\n              <View\n                style={{\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  paddingTop: 15,\n                }}\n              >\n                <Button\n                  size=\"small\"\n                  onPress={() => {\n                    if (!settings.is_available) {\n                      alert.error(\n                        \"Trading is temporarily disabled, Kindly try again later.\"\n                      );\n                      return;\n                    }\n                    setCurrency(currency);\n                    navigation.navigate(\"Buy\", { currency: currency.currency });\n                  }}\n                >\n                  Trade\n                </Button>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Button, Icon } from \"@ui-kitten/components\";\nimport { View, TouchableOpacity, Image } from \"react-native\";\nimport useScreenSize from \"../../../hooks/useScreenSize\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { MainApiContext } from \"../../../contexts/ApiContexts\";\n\nexport default function SingleNav({ theme }) {\n  const small = useScreenSize();\n  const navigation = useNavigation();\n\n  const { settings } = useContext(MainApiContext);\n\n  return (\n    <View\n      style={{\n        position: \"sticky\",\n        alignItems: \"center\",\n        left: 0,\n        right: 0,\n        top: 10,\n        zIndex: 100000,\n      }}\n    >\n      <View\n        style={{\n          borderRadius: 150,\n          borderWidth: 1,\n          borderColor: theme[\"color-primary-600\"],\n          backgroundColor: theme[\"color-basic-100\"],\n          paddingHorizontal: 30,\n          paddingVertical: 15,\n          minWidth: small ? 240 : 320,\n          height: small ? 50 : 75,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ height: 30, width: 30 }}>\n          <Image\n            source={{ uri: settings?.logo }}\n            style={{ height: undefined, width: undefined, flex: 1 }}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          {!small ? (\n            <Button size=\"medium\" style={{ borderRadius: 400 }}>\n              Contact\n            </Button>\n          ) : (\n            <>\n              <TouchableOpacity activeOpacity={0.8}>\n                <Icon\n                  name=\"email-outline\"\n                  height={30}\n                  fill={theme[\"color-primary-600\"]}\n                  width={30}\n                />\n              </TouchableOpacity>\n            </>\n          )}\n\n          <TouchableOpacity\n            activeOpacity={0.8}\n            style={{ paddingLeft: 15 }}\n            onPress={() => navigation.navigate(\"Search\")}\n          >\n            <Icon\n              name=\"search-outline\"\n              height={30}\n              fill={theme[\"color-primary-600\"]}\n              width={30}\n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Button, Icon } from \"@ui-kitten/components\";\nimport { View, TouchableOpacity, Image } from \"react-native\";\nimport useScreenSize from \"../../../hooks/useScreenSize\";\nimport { useNavigation } from \"@react-navigation/core\";\n\nimport { MainApiContext } from \"../../../contexts/ApiContexts\";\n\nexport default function SplitNav({ theme }) {\n  const small = useScreenSize();\n  const navigation = useNavigation();\n\n  const { settings } = useContext(MainApiContext);\n  return (\n    <View\n      style={{\n        position: \"sticky\",\n        // alignItems: \"center\",\n        left: 0,\n        right: 0,\n        top: 10,\n        zIndex: 100000,\n      }}\n    >\n      {/* <BaseFullNavigationBar theme={theme} /> */}\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          minWidth: small ? \"100%\" : 900,\n          justifyContent: \"space-between\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          alignItems: \"center\",\n          paddingHorizontal: 15,\n        }}\n      >\n        <View>\n          <View style={{ height: 30, width: 30 }}>\n            <Image\n              source={{ uri: settings?.logo }}\n              style={{ height: undefined, width: undefined, flex: 1 }}\n            />\n          </View>\n        </View>\n\n        <View>\n          <View\n            style={{\n              borderRadius: 150,\n              borderWidth: 1,\n              borderColor: theme[\"color-primary-600\"],\n              backgroundColor: theme[\"color-basic-100\"],\n              paddingHorizontal: 30,\n              paddingVertical: 15,\n              minWidth: 120,\n              height: small ? 50 : 75,\n              alignItems: \"center\",\n              flexDirection: \"row\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              {!small ? (\n                <Button size=\"medium\" style={{ borderRadius: 400 }}>\n                  Contact\n                </Button>\n              ) : (\n                <>\n                  <TouchableOpacity activeOpacity={0.8}>\n                    <Icon\n                      name=\"email-outline\"\n                      height={30}\n                      fill={theme[\"color-primary-600\"]}\n                      width={30}\n                    />\n                  </TouchableOpacity>\n                </>\n              )}\n\n              <TouchableOpacity\n                activeOpacity={0.8}\n                style={{ paddingLeft: 15 }}\n                onPress={() => navigation.navigate(\"Search\")}\n              >\n                <Icon\n                  name=\"search-outline\"\n                  height={30}\n                  fill={theme[\"color-primary-600\"]}\n                  width={30}\n                />\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Layout, Text, useTheme } from \"@ui-kitten/components\";\nimport { View, ScrollView, TouchableOpacity } from \"react-native\";\nimport FullColor from \"./components/headers/FullColor\";\nimport FullImage from \"./components/headers/FullImage\";\nimport HalfImage from \"./components/headers/HalfImage\";\nimport SplitColor from \"./components/headers/SplitColor\";\nimport renderSwitch from \"../hooks/renderSwitch\";\nimport ListByTable from \"./components/currency-list/ListByTable\";\nimport ListByCards from \"./components/currency-list/ListByCards\";\nimport SingleNav from \"./components/navbars/SingleNav\";\nimport SplitNav from \"./components/navbars/SplitNav\";\nimport { MainApiContext } from \"../contexts/ApiContexts\";\nimport * as WebBrowser from \"expo-web-browser\";\n\nexport default function HomeScreen() {\n  const theme = useTheme();\n\n  const { settings } = useContext(MainApiContext);\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <NavBar\n        theme={theme}\n        current={settings?.theme?.navbar}\n        settings={settings}\n      />\n      <ScrollView\n        style={{\n          flex: 1,\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        <HeroBanner\n          theme={theme}\n          current={settings?.theme?.header}\n          settings={settings}\n        />\n\n        <CurrencyList\n          theme={theme}\n          current={settings?.theme?.list}\n          settings={settings}\n        />\n\n        <View style={{ alignItems: \"center\", paddingVertical: 20 }}>\n          <Text category=\"s1\">\n            © {`${new Date().getFullYear()} ${settings.name}`}. All rights\n            reserved.\n          </Text>\n          {settings?.theme?.header.includes(\"image\") && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 30,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginTop: 10,\n              }}\n            >\n              <Text category=\"p2\">Photo by </Text>\n              <TouchableOpacity\n                onPress={() => {\n                  WebBrowser.openBrowserAsync(\n                    settings?.theme?.banner?.user.link\n                  );\n                }}\n              >\n                <Text\n                  category=\"p2\"\n                  style={{\n                    textDecorationStyle: \"solid\",\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {settings?.theme?.banner?.user.username}{\" \"}\n                </Text>\n              </TouchableOpacity>\n              <Text category=\"p2\">on </Text>\n              <TouchableOpacity\n                onPress={() => {\n                  WebBrowser.openBrowserAsync(\"https://unsplash.com\");\n                }}\n              >\n                <Text\n                  category=\"p2\"\n                  style={{\n                    textDecorationStyle: \"solid\",\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  Unsplash\n                </Text>\n              </TouchableOpacity>\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </Layout>\n  );\n}\n\nfunction NavBar({ theme, current = \"single-nav\", settings }) {\n  return renderSwitch(current, {\n    \"single-nav\": <SingleNav theme={theme} />,\n    \"split-nav\": <SplitNav theme={theme} />,\n  });\n}\n\nfunction HeroBanner({ theme, current = \"split-color\", settings }) {\n  const { intro, tagline, banner, ...rest } = settings.theme;\n\n  return renderSwitch(current, {\n    \"full-color\": <FullColor theme={theme} {...{ intro, tagline }} />,\n    \"full-image\": (\n      <FullImage\n        theme={theme}\n        {...{ intro, tagline }}\n        image={banner?.urls?.regular}\n      />\n    ),\n    \"half-image\": (\n      <HalfImage\n        theme={theme}\n        {...{ intro, tagline }}\n        image={banner?.urls?.regular}\n      />\n    ),\n    \"split-color\": <SplitColor theme={theme} {...{ intro, tagline }} />,\n  });\n}\n\nfunction CurrencyList({ theme, current = \"by-cards\", settings }) {\n  return renderSwitch(current, {\n    \"by-table\": <ListByTable theme={theme} />,\n    \"by-cards\": <ListByCards theme={theme} />,\n  });\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport {\n  Text,\n  Icon,\n  useTheme,\n  Spinner,\n  Button,\n  Divider,\n} from \"@ui-kitten/components\";\nimport { useAlert } from \"react-alert\";\n\nimport { differenceInSeconds, fromUnixTime } from \"date-fns\";\n\nimport ModalContainer from \"./components/ModalContainer\";\nimport { MainApiContext } from \"../contexts/ApiContexts\";\nimport Clipboard from \"expo-clipboard\";\nimport QRCode from \"react-native-qrcode-svg\";\nimport currencyLogos from \"../assets/images/currencies\";\n\nexport default function OverviewScreen({ navigation }) {\n  const theme = useTheme();\n  const alert = useAlert();\n\n  const { order } = useContext(MainApiContext);\n\n  return (\n    <ModalContainer>\n      <ScrollView\n        style={{ flex: 1 }}\n        contentContainerStyle={{ paddingBottom: 50 }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingVertical: 15,\n            paddingHorizontal: 15,\n          }}\n        >\n          <View>\n            <Text category=\"s1\">Order Details</Text>\n          </View>\n\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Icon\n              name=\"close-circle-outline\"\n              height={30}\n              width={30}\n              fill={theme[\"color-basic-700\"]}\n            />\n          </TouchableOpacity>\n        </View>\n\n        <Divider />\n\n        <View\n          style={{\n            paddingVertical: 15,\n            paddingHorizontal: 15,\n            marginBottom: 15,\n          }}\n        >\n          <View style={{ paddingVertical: 15 }}>\n            <Text category=\"h6\">Reference Number</Text>\n            <Text category=\"s1\">{order.reference}</Text>\n          </View>\n\n          <View style={{ paddingVertical: 15 }}>\n            <Text category=\"h6\">Buying Amount</Text>\n            <Text category=\"s1\">NGN {order.amount.toLocaleString()}</Text>\n            <Text category=\"p2\">\n              Apr ~ {order.cryptoAmount} {order.currency}\n            </Text>\n          </View>\n\n          <View style={{ paddingVertical: 15 }}>\n            <Text category=\"h6\">Timer</Text>\n            <View style={{ flexDirection: \"row\" }}>\n              <Text category=\"s1\" status=\"danger\">\n                <Time>{order.time}</Time>\n              </Text>\n              <View style={{ paddingLeft: 10 }}>\n                <Spinner size=\"tiny\" status=\"danger\" />{\" \"}\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <Divider />\n\n        {order.type == \"BUY\" && (\n          <>\n            <View\n              style={{\n                paddingVertical: 15,\n                paddingHorizontal: 15,\n                marginTop: 15,\n              }}\n            >\n              <Text category=\"h6\">Receiving Account Details</Text>\n              <View style={{ height: 5 }} />\n              <Text category=\"p2\">\n                Kindly make a payment of your buying amount to the account\n                details provided below. Your cryptocurrency will be released\n                into your receiving address only when payment has been\n                successfuly verified.\n              </Text>\n            </View>\n\n            <View style={{ paddingHorizontal: 15 }}>\n              <View style={{ paddingVertical: 15 }}>\n                <Text category=\"h6\">Account Name</Text>\n                <Text category=\"s1\">{order.accountName}</Text>\n              </View>\n\n              <View style={{ paddingVertical: 15 }}>\n                <Text category=\"h6\">Bank Name</Text>\n                <Text category=\"s1\">{order.bankName}</Text>\n              </View>\n\n              <View style={{ paddingVertical: 15 }}>\n                <Text category=\"h6\">Account Number</Text>\n                <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                  <Text category=\"s1\">{order.accountNumber}</Text>\n                  <TouchableOpacity\n                    style={{ paddingHorizontal: 10 }}\n                    onPress={async () => {\n                      await Clipboard.setString(order.accountNumber);\n                      alert.success(`${order.bankName} Account Number Copied`);\n                    }}\n                  >\n                    <Icon\n                      name=\"copy\"\n                      fill={theme[\"color-primary-600\"]}\n                      width={20}\n                      height={20}\n                    />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          </>\n        )}\n\n        {order.type == \"SELL\" && (\n          <>\n            <View\n              style={{\n                paddingVertical: 15,\n                paddingHorizontal: 15,\n                marginTop: 15,\n              }}\n            >\n              <Text category=\"h6\">Receiving Account Details</Text>\n              <View style={{ height: 5 }} />\n              <Text category=\"p2\">\n                Kindly make a payment of your selling amount to the address\n                provided below. Your payment will be released to your bank\n                account once your crypto has received at least payment one\n                blockchain confirmation.\n              </Text>\n            </View>\n\n            <View style={{ paddingHorizontal: 15 }}>\n              <View style={{ paddingVertical: 15 }}>\n                <View style={{}}>\n                  <QRCode\n                    logo={currencyLogos[order.currency]}\n                    logoSize={40}\n                    logoBackgroundColor=\"transparent\"\n                    value={order.address}\n                    size={150}\n                  />\n                </View>\n              </View>\n\n              <View style={{ paddingVertical: 15 }}>\n                <Text category=\"h6\">{order.currency} Address</Text>\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                    paddingBottom: 10,\n                  }}\n                >\n                  <View style={{ flex: 1 }}>\n                    <Text category=\"s1\">{order.address}</Text>\n                  </View>\n                  <TouchableOpacity\n                    style={{ paddingHorizontal: 10 }}\n                    onPress={async () => {\n                      await Clipboard.setString(order.address);\n                      alert.success(`${order.currency} Address Copied`);\n                    }}\n                  >\n                    <Icon\n                      name=\"copy\"\n                      fill={theme[\"color-primary-600\"]}\n                      width={25}\n                      height={25}\n                    />\n                  </TouchableOpacity>\n                </View>\n\n                {order.memoTag ? (\n                  <>\n                    <Text category=\"h6\">{order.currency} Address Memo/Tag</Text>\n                    <Text category=\"s1\">{order.memoTag}</Text>\n                  </>\n                ) : (\n                  <></>\n                )}\n              </View>\n            </View>\n          </>\n        )}\n\n        <View style={{ paddingHorizontal: 15 }}>\n          <Button\n            size=\"giant\"\n            onPress={async () => {\n              await Clipboard.setString(order.reference);\n              alert.success(\"Reference Number Copied To Clipboard\");\n            }}\n          >\n            Copy reference\n          </Button>\n        </View>\n      </ScrollView>\n    </ModalContainer>\n  );\n}\n\nconst Time = ({ children }) => {\n  const [ticker, setTicker] = useState(new Date());\n  useEffect(() => {\n    const interval = setInterval(() => setTicker(Date.now()), 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  var sec_num = parseInt(\n    differenceInSeconds(new Date(), fromUnixTime(children)),\n    10\n  );\n\n  var hours = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\n  var seconds = sec_num - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n","import React, { useContext, useState } from \"react\";\nimport { TouchableOpacity, View, TouchableWithoutFeedback } from \"react-native\";\nimport {\n  Text,\n  Icon,\n  useTheme,\n  Input,\n  Button,\n  Spinner,\n} from \"@ui-kitten/components\";\nimport { useAlert } from \"react-alert\";\n\nimport ModalContainer from \"./components/ModalContainer\";\nimport { MainApiContext } from \"../contexts/ApiContexts\";\nimport { useNavigation } from \"@react-navigation/core\";\n\nexport default function SearchScreen({ navigation }) {\n  const theme = useTheme();\n  const alert = useAlert();\n\n  const [orderId, setOrderId] = useState(\"\");\n\n  const { searchOrder, loadingGetOrder } = useContext(MainApiContext);\n\n  const onPressSearch = async () => {\n    const { status } = await searchOrder(orderId);\n\n    if (!status) {\n      return alert.error(\"Order not found\");\n    }\n\n    navigation.replace(\"Overview\");\n  };\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={onPressSearch}>\n      <Icon {...props} name=\"search-outline\" />\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <ModalContainer>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingVertical: 15,\n          paddingHorizontal: 15,\n        }}\n      >\n        <View>\n          <Text category=\"h5\">Search</Text>\n          <View style={{ height: 5 }} />\n          <Text category=\"s1\" appearance=\"hint\">\n            Kindly search with transaction reference\n          </Text>\n        </View>\n\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <Icon\n            name=\"close-circle-outline\"\n            height={30}\n            width={30}\n            fill={theme[\"color-basic-700\"]}\n          />\n        </TouchableOpacity>\n      </View>\n\n      <View style={{ paddingHorizontal: 15, paddingTop: 35 }}>\n        <Input\n          placeholder=\"Search reference\"\n          size=\"large\"\n          accessoryRight={renderIcon}\n          onChangeText={setOrderId}\n          value={orderId}\n        />\n        <View style={{ paddingTop: 15 }}>\n          <View style={{ paddingTop: 15 }}>\n            <Button\n              size=\"giant\"\n              onPress={() => {\n                if (loadingGetOrder) {\n                  return;\n                }\n                onPressSearch();\n              }}\n              accessoryLeft={() => {\n                if (!loadingGetOrder) {\n                  return <></>;\n                }\n\n                return <Spinner size=\"small\" status=\"control\" />;\n              }}\n            >\n              {loadingGetOrder ? \"Searching\" : \"Search\"}\n            </Button>\n          </View>\n        </View>\n      </View>\n    </ModalContainer>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  TouchableOpacity,\n  View,\n  TextInput,\n  ScrollView,\n  Alert,\n} from \"react-native\";\nimport {\n  Text,\n  Icon,\n  useTheme,\n  Button,\n  Divider,\n  Select,\n  SelectItem,\n  Input,\n  Spinner,\n} from \"@ui-kitten/components\";\nimport Clipboard from \"expo-clipboard\";\n\nimport ModalContainer from \"./components/ModalContainer\";\nimport useScreenSize from \"../hooks/useScreenSize\";\nimport { useAlert } from \"react-alert\";\nimport { MainApiContext } from \"../contexts/ApiContexts\";\n\nexport default function SellScreen({ navigation }) {\n  const theme = useTheme();\n  const small = useScreenSize();\n  const alert = useAlert();\n  const {\n    currency,\n    sellCrypto,\n    settings,\n    resolveAccount,\n    loadingAccountResolve,\n    loadingSellRequest,\n  } = useContext(MainApiContext);\n\n  const [isFiat, setIsFiat] = useState(true);\n  const [amount, setAmount] = useState(\"0.00\");\n  const [cryptoAmount, setCryptoAmount] = useState(\"0.00\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [bank, setBank] = useState(\"\");\n  const [selectBankIndex, setSelectBankIndex] = useState();\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [accountName, setAccountName] = useState(\"\");\n\n  useEffect(() => {\n    if (isFiat) {\n      setCryptoAmount(amount / currency.fiat_sell_price);\n    }\n    if (!isFiat) {\n      setAmount(cryptoAmount * currency.fiat_sell_price);\n    }\n  }, [isFiat, amount, cryptoAmount]);\n\n  const onClickProceedToPayment = async () => {\n    if (!accountName) {\n      return alert.error(\"Please enter valid account details\");\n    }\n\n    const { status } = await sellCrypto({\n      amount,\n      bank,\n      accountNumber,\n      isFiat,\n      cryptoAmount,\n      phoneNumber,\n    });\n\n    if (status) {\n      navigation.replace(\"Overview\");\n    }\n  };\n\n  const onResolveAccount = async () => {\n    const { name, status } = await resolveAccount({\n      bank,\n      accountNumber,\n    });\n\n    if (status) {\n      setAccountName(name);\n    }\n  };\n\n  useEffect(() => {\n    if (accountNumber.length >= 10) {\n      onResolveAccount();\n    } else {\n      setAccountName(\"\");\n    }\n  }, [bank, accountNumber]);\n\n  useEffect(() => {\n    setAccountName(\"\");\n  }, [bank]);\n\n  useEffect(() => {\n    if (selectBankIndex) {\n      setBank(settings.banks[selectBankIndex.row].code);\n    }\n  }, [selectBankIndex]);\n\n  return (\n    <ModalContainer>\n      <ScrollView\n        style={{ flex: 1 }}\n        contentContainerStyle={{ paddingBottom: 50 }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingVertical: 15,\n            paddingHorizontal: 15,\n          }}\n        >\n          <Text category=\"h6\">What do you want to do?</Text>\n\n          {!loadingSellRequest && (\n            <TouchableOpacity\n              activeOpacity={0.8}\n              onPress={() => navigation.goBack()}\n            >\n              <Icon\n                name=\"close-circle-outline\"\n                height={30}\n                width={30}\n                fill={theme[\"color-basic-700\"]}\n              />\n            </TouchableOpacity>\n          )}\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            paddingHorizontal: 15,\n            marginBottom: 20,\n          }}\n        >\n          <View style={{ width: small ? 125 : 175 }}>\n            <Button\n              style={{ borderRadius: 400 }}\n              size={small ? \"medium\" : \"giant\"}\n            >\n              SELL {currency.currency}\n            </Button>\n          </View>\n          <View style={{ width: 25 }} />\n          <View style={{ width: small ? 125 : 175 }}>\n            <Button\n              style={{ backgroundColor: \"transparent\", borderRadius: 400 }}\n              size={small ? \"medium\" : \"giant\"}\n              appearance=\"outline\"\n              onPress={() => navigation.replace(\"Buy\")}\n            >\n              BUY {currency.currency}\n            </Button>\n          </View>\n        </View>\n        <Divider />\n        <View style={{ paddingHorizontal: 15, marginVertical: 20 }}>\n          <View style={{ marginBottom: 5 }}>\n            <Text category=\"s1\">How much do you want to sell?</Text>\n          </View>\n\n          <View>\n            <Input\n              style={{\n                borderWidth: 1,\n                borderColor: theme[\"color-primary-600\"],\n                borderRadius: 5,\n              }}\n              value={isFiat ? amount : cryptoAmount}\n              onChangeText={(text) => {\n                if (isFiat) {\n                  setAmount(text);\n                }\n\n                if (!isFiat) {\n                  setCryptoAmount(text);\n                }\n              }}\n              keyboardType=\"decimal-pad\"\n              accessoryRight={() => {\n                if (isFiat) {\n                  return <></>;\n                }\n                return (\n                  <Text status=\"primary\" category=\"label\">\n                    {currency.currency}\n                  </Text>\n                );\n              }}\n              accessoryLeft={() => {\n                if (!isFiat) {\n                  return <></>;\n                }\n                return (\n                  <Text status=\"primary\" category=\"label\">\n                    NGN\n                  </Text>\n                );\n              }}\n              size=\"large\"\n              placeholder=\"Enter amount\"\n            />\n          </View>\n\n          <View\n            style={{\n              marginTop: 5,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text category=\"s2\">\n              Approximately{\" \"}\n              {isFiat\n                ? `${Number(cryptoAmount).toFixed(8)} ${currency.currency}`\n                : `NGN ${amount.toLocaleString()}`}\n            </Text>\n            <TouchableOpacity onPress={() => setIsFiat(!isFiat)}>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <View style={{ marginRight: 2 }}>\n                  <Text category=\"label\" status=\"danger\">\n                    {isFiat ? \"By Crypto\" : \"By Cash\"}\n                  </Text>\n                </View>\n                <Icon\n                  name=\"swap-outline\"\n                  width={15}\n                  height={15}\n                  fill={theme[\"color-danger-600\"]}\n                />\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <Divider />\n\n        <View style={{ paddingHorizontal: 15, paddingVertical: 25 }}>\n          <Text category=\"s1\">Receiving Account Details</Text>\n\n          <View style={{ height: 5 }} />\n\n          <Text category=\"p2\">\n            Kindly provide the bank account details where you want to receive\n            money for your crypto.\n          </Text>\n        </View>\n\n        <View style={{ paddingHorizontal: 15 }}>\n          <View style={{ marginTop: 10, marginBottom: 15 }}>\n            <View style={{ marginBottom: 5 }}>\n              <Text category=\"s1\">Phone Number</Text>\n            </View>\n\n            <View>\n              <Input\n                value={phoneNumber}\n                onChangeText={(e) => setPhoneNumber(e)}\n                style={{\n                  borderWidth: 1,\n                  borderColor: theme[\"color-primary-600\"],\n                  borderRadius: 5,\n                }}\n                size=\"large\"\n                placeholder=\"Enter phone number\"\n              />\n            </View>\n          </View>\n          {small ? (\n            <>\n              {\" \"}\n              <View style={{ flex: 1, paddingVertical: 15 }}>\n                <View style={{ marginBottom: 5 }}>\n                  <Text category=\"s1\">Select Bank</Text>\n                </View>\n\n                <Select\n                  size=\"large\"\n                  placeholder=\"Select a Bank\"\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  value={(settings?.banks ?? [])[selectBankIndex - 1]?.name}\n                  onSelect={(index) => setSelectBankIndex(index)}\n                  selectedIndex={selectBankIndex}\n                >\n                  {settings.banks.map((bank) => (\n                    <SelectItem title={bank.name} key={bank.name} />\n                  ))}\n                </Select>\n              </View>\n              <View style={{ flex: 1, paddingVertical: 15 }}>\n                <View style={{ marginBottom: 5 }}>\n                  <Text category=\"s1\">Account Number</Text>\n                </View>\n\n                <Input\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  size=\"large\"\n                  value={accountNumber}\n                  placeholder=\"Enter account number\"\n                  onChangeText={(e) => setAccountNumber(e)}\n                  accessoryRight={() => {\n                    if (!loadingAccountResolve) {\n                      return <></>;\n                    }\n                    return <Spinner size=\"tiny\" status=\"success\" />;\n                  }}\n                />\n              </View>\n            </>\n          ) : (\n            <View style={{ flexDirection: \"row\" }}>\n              <View style={{ flex: 1 }}>\n                <View style={{ marginBottom: 5 }}>\n                  <Text category=\"s1\">Select Bank</Text>\n                </View>\n\n                <Select\n                  size=\"large\"\n                  placeholder=\"Select a Bank\"\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  value={(settings?.banks ?? [])[selectBankIndex - 1]?.name}\n                  onSelect={(index) => setSelectBankIndex(index)}\n                  selectedIndex={selectBankIndex}\n                >\n                  {settings.banks.map((bank) => (\n                    <SelectItem title={bank.name} key={bank.name} />\n                  ))}\n                </Select>\n              </View>\n\n              <View style={{ width: 10 }} />\n\n              <View style={{ width: 240 }}>\n                <View style={{ marginBottom: 5 }}>\n                  <Text category=\"s1\">Account Number</Text>\n                </View>\n\n                <Input\n                  style={{\n                    borderWidth: 1,\n                    borderColor: theme[\"color-primary-600\"],\n                    borderRadius: 5,\n                  }}\n                  size=\"large\"\n                  value={accountNumber}\n                  placeholder=\"Enter account number\"\n                  onChangeText={(e) => setAccountNumber(e)}\n                  accessoryRight={() => {\n                    if (!loadingAccountResolve) {\n                      return <></>;\n                    }\n                    return <Spinner size=\"tiny\" status=\"success\" />;\n                  }}\n                />\n              </View>\n            </View>\n          )}\n\n          <View style={{ flex: 1, paddingVertical: 15 }}>\n            <View style={{ marginBottom: 5 }}>\n              <Text category=\"s1\">Account Name</Text>\n            </View>\n\n            <Input\n              style={{\n                borderWidth: 1,\n                borderColor: theme[\"color-primary-600\"],\n                borderRadius: 5,\n              }}\n              size=\"large\"\n              value={accountName}\n              placeholder=\"Enter full account name\"\n              editable={false}\n            />\n          </View>\n\n          <View style={{ paddingTop: 15 }}>\n            <Button\n              size=\"giant\"\n              onPress={() => {\n                if (loadingSellRequest) {\n                  return;\n                }\n                onClickProceedToPayment();\n              }}\n              accessoryLeft={() => {\n                if (!loadingSellRequest) {\n                  return <></>;\n                }\n\n                return <Spinner size=\"small\" status=\"control\" />;\n              }}\n            >\n              {loadingSellRequest ? \"Processing\" : \"Proceed to Payment\"}\n            </Button>\n          </View>\n        </View>\n      </ScrollView>\n    </ModalContainer>\n  );\n}\n","import { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport React, { useContext } from \"react\";\nimport { ColorSchemeName } from \"react-native\";\nimport BuyScreen from \"./BuyScreen\";\nimport ContactScreen from \"./ContactScreen\";\nimport HomeScreen from \"./HomeScreen\";\nimport OverviewScreen from \"./OverviewScreen\";\nimport SearchScreen from \"./SearchScreen\";\nimport SellScreen from \"./SellScreen\";\nimport Favicon from \"react-favicon\";\n\nimport { MainApiContext } from \"../contexts/ApiContexts\";\n\nexport default function Navigation({\n  colorScheme,\n}: {\n  colorScheme: ColorSchemeName;\n}) {\n  return (\n    <>\n      <NavigationContainer>\n        <RootNavigator />\n      </NavigationContainer>\n    </>\n  );\n}\n\nconst Stack = createStackNavigator();\n\nfunction RootNavigator() {\n  const { settings } = useContext(MainApiContext);\n  return (\n    <>\n      <Favicon url={settings?.logo} />\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n          cardStyle: { backgroundColor: \"transparent\" },\n          cardOverlayEnabled: true,\n          cardStyleInterpolator: ({ current: { progress } }) => ({\n            cardStyle: {\n              opacity: progress.interpolate({\n                inputRange: [0, 0.5, 0.9, 1],\n                outputRange: [0, 0.25, 0.7, 1],\n              }),\n            },\n            overlayStyle: {\n              opacity: progress.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, 0.8],\n                extrapolate: \"clamp\",\n              }),\n            },\n          }),\n        }}\n        mode=\"modal\"\n      >\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{ title: settings.name + \" - Home\" }}\n        />\n        <Stack.Screen name=\"Contact\" component={ContactScreen} />\n        <Stack.Screen name=\"Search\" component={SearchScreen} />\n        <Stack.Screen name=\"Overview\" component={OverviewScreen} />\n        <Stack.Screen name=\"Buy\" component={BuyScreen} />\n        <Stack.Screen name=\"Sell\" component={SellScreen} />\n      </Stack.Navigator>\n    </>\n  );\n}\n","import \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { Platform, View } from \"react-native\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\n\nimport Template from \"./screens\";\nimport { default as mapping } from \"./assets/mapping.json\";\n\nimport * as eva from \"@eva-design/eva\";\nimport { ApplicationProvider, IconRegistry } from \"@ui-kitten/components\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\n\nimport ApiContext, { MainApiContext } from \"./contexts/ApiContexts\";\nimport { positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nconst options = {\n  timeout: 3000,\n  position: positions.TOP_RIGHT,\n};\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nexport default function App() {\n  injectWebCss();\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  return (\n    <>\n      <AlertProvider template={AlertTemplate} {...options}>\n        <IconRegistry icons={EvaIconsPack} />\n        <SafeAreaProvider>\n          <ApiContext>\n            <AppWithLoading colorScheme={colorScheme} />\n          </ApiContext>\n        </SafeAreaProvider>\n      </AlertProvider>\n    </>\n  );\n}\n\nconst AppWithLoading = ({ colorScheme }) => {\n  const isLoadingComplete = useCachedResources();\n  const { settings } = React.useContext(MainApiContext);\n\n  if (!isLoadingComplete || !settings?.theme?.colors) {\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"rgba(0,0,0,0.2)\",\n        }}\n      >\n        <Loader type=\"Bars\" color=\"white\" height={60} width={150} />\n      </View>\n    );\n  } else {\n    return (\n      <ApplicationProvider\n        {...eva}\n        theme={{ ...eva.light, ...(settings.theme?.colors || {}) }}\n        customMapping={mapping}\n      >\n        <Template colorScheme={colorScheme} />\n        <StatusBar />\n      </ApplicationProvider>\n    );\n  }\n};\n\nconst noGlow = `\ntextarea, select, input, button {\n\t-webkit-appearance: none;\n\toutline: none!important;\n}\ntextarea:focus, select:focus, input:focus, button:focus {\n\t-webkit-appearance: none;\n\toutline: none!important;\n}\n`;\nconst injectWebCss = () => {\n  // Only on web\n  if (Platform.OS != \"web\") return;\n\n  // Inject style\n  const style = document.createElement(\"style\");\n  style.textContent = noGlow;\n  return document.head.append(style);\n};\n","import {\n  ColorSchemeName,\n  useColorScheme as _useColorScheme,\n} from \"react-native\";\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","var map = {\n\t\"./ar\": 269,\n\t\"./ar.js\": 269,\n\t\"./az\": 270,\n\t\"./az.js\": 270,\n\t\"./be\": 271,\n\t\"./be.js\": 271,\n\t\"./bg\": 272,\n\t\"./bg.js\": 272,\n\t\"./bs\": 273,\n\t\"./bs.js\": 273,\n\t\"./ca\": 274,\n\t\"./ca.js\": 274,\n\t\"./cs\": 275,\n\t\"./cs.js\": 275,\n\t\"./cy\": 276,\n\t\"./cy.js\": 276,\n\t\"./da\": 277,\n\t\"./da.js\": 277,\n\t\"./de\": 278,\n\t\"./de.js\": 278,\n\t\"./el\": 279,\n\t\"./el.js\": 279,\n\t\"./en\": 203,\n\t\"./en.js\": 203,\n\t\"./es\": 280,\n\t\"./es.js\": 280,\n\t\"./et\": 281,\n\t\"./et.js\": 281,\n\t\"./eu\": 282,\n\t\"./eu.js\": 282,\n\t\"./fa\": 283,\n\t\"./fa.js\": 283,\n\t\"./fi\": 284,\n\t\"./fi.js\": 284,\n\t\"./fr\": 285,\n\t\"./fr.js\": 285,\n\t\"./hr\": 286,\n\t\"./hr.js\": 286,\n\t\"./hu\": 287,\n\t\"./hu.js\": 287,\n\t\"./id\": 288,\n\t\"./id.js\": 288,\n\t\"./it\": 289,\n\t\"./it.js\": 289,\n\t\"./ja\": 290,\n\t\"./ja.js\": 290,\n\t\"./ka\": 291,\n\t\"./ka.js\": 291,\n\t\"./ko\": 292,\n\t\"./ko.js\": 292,\n\t\"./lt\": 293,\n\t\"./lt.js\": 293,\n\t\"./lv\": 294,\n\t\"./lv.js\": 294,\n\t\"./mk\": 295,\n\t\"./mk.js\": 295,\n\t\"./mn\": 296,\n\t\"./mn.js\": 296,\n\t\"./ms\": 297,\n\t\"./ms.js\": 297,\n\t\"./nb_NO\": 298,\n\t\"./nb_NO.js\": 298,\n\t\"./nl\": 299,\n\t\"./nl.js\": 299,\n\t\"./pl\": 300,\n\t\"./pl.js\": 300,\n\t\"./pt\": 301,\n\t\"./pt.js\": 301,\n\t\"./pt_BR\": 302,\n\t\"./pt_BR.js\": 302,\n\t\"./ro\": 303,\n\t\"./ro.js\": 303,\n\t\"./ru\": 304,\n\t\"./ru.js\": 304,\n\t\"./se\": 305,\n\t\"./se.js\": 305,\n\t\"./sl\": 306,\n\t\"./sl.js\": 306,\n\t\"./sq\": 307,\n\t\"./sq.js\": 307,\n\t\"./sr\": 308,\n\t\"./sr.js\": 308,\n\t\"./sv\": 309,\n\t\"./sv.js\": 309,\n\t\"./tr\": 310,\n\t\"./tr.js\": 310,\n\t\"./ua\": 311,\n\t\"./ua.js\": 311,\n\t\"./uk\": 312,\n\t\"./uk.js\": 312,\n\t\"./vi\": 313,\n\t\"./vi.js\": 313,\n\t\"./zh\": 314,\n\t\"./zh.js\": 314,\n\t\"./zh_TW\": 315,\n\t\"./zh_TW.js\": 315\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 527;","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/naira.b790bc45.png\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin.a4c16d5a.png\";","module.exports = __webpack_public_path__ + \"static/media/bitcoincash.ad822a4b.png\";","module.exports = __webpack_public_path__ + \"static/media/litecoin.683616fd.png\";","module.exports = __webpack_public_path__ + \"static/media/ethereum.5172b2da.png\";","module.exports = __webpack_public_path__ + \"static/media/usdt.df5ea4c9.png\";","module.exports = __webpack_public_path__ + \"static/media/trx.9189bcbb.png\";","module.exports = __webpack_public_path__ + \"static/media/doge.8dd76f99.png\";","module.exports = __webpack_public_path__ + \"static/media/bnb.db53d83a.png\";","module.exports = __webpack_public_path__ + \"static/media/xrp.a75ae7d8.png\";","module.exports = __webpack_public_path__ + \"static/media/xlm.a82538c4.png\";"],"sourceRoot":""}